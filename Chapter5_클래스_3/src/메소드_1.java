/*
 * 		클래스 구성요소
 * 		---------------------------------------------
 * 		 변수 : 프로그램 종료시까지 유지하는 변수(전역변수, 멤버변수)
 * 			   메소드 안에서 사용되는 변수(지역변수)
 * 			   기본형 / 참조형
 * 					  ----
 * 					메모리 주소를 이용해서 연결
 * 					배열(1차원)->같은 크기의 데이터형만, 클래스->다른 크기의 데이터형***
 * 		---------------------------------------------
 * 		 생성자 : 변수에 초기화, 클래스를 메모리에 저장시에 사용
 * 		---------------------------------------------
 * 		 메소드 : 기능을 수행, 다른 클래스와 연결(메세지)***
 * 				--------> 연산자 / 제어문(명령문)
 * 				명령문의 집합
 * 					1) 다른 클래스와 통신
 * 					2) 재사용 목적
 * 						=> 기능을 최소화(한개의 기능만 수행)
 * 		---------------------------------------------
 * 		1. 메소드 형식
 * 			[접근지정어] [옵션] 리턴형 메소드명(매개변수...){ }
 * 			 public static/final/abstract
 * 		2. 메소드 종류
 * 			리턴형	매개변수
 * 			-------------
 * 			 O		  O
 * 			String substring(int s)
 * 			String replace(String s1, String s2)
 * 			-------------
 * 			 O		  X
 * 			String trim()
 * 			double random()
 * 			-------------
 * 			 X		  O
 * 			void println(String s)
 * 			void main(String[] args)
 * 			-------------
 * 			 X		  X
 * 			void println()
 * 			-------------
 * 		3. 메소드 구성요소
 * 			1) 리턴형(처리 결과값) => 화면 출력(데이터) / 여러개인 경우는 배열, 클래스
 * 			2) 매개변수(사용자 요청값) => 데이터가 3개 이상이면 배열, 클래스
 * 			3) 메소드명
 * 				알파벳으로 시작한다(대소문자 구분)
 * 				숫자사용이 가능하지만 앞에는 사용금지
 * 				특수문자는 _, $
 * 				 _ : 임시메소드 혹은 단어가 2개 이상일 때
 * 				키워드 사용금지
 * 				소문자로 시작(권장사항)
 * 			---------------------------------------------------------- 식별자
 * 			변수는 같은 이름으로 사용이 불가능하다.
 * 			메소드는 같은 이름을 사용할 수 있다. (오버로딩)
 * 			-------------> 매개변수가 달라야함
 * 
 * 			매개변수 갯수를 알지 못하는 경우***
 * 				1. 장바구니 => 가변매개변수
 * 					(int... arg)
 * 		
 */
import java.util.Arrays;
import java.util.Scanner;
public class 메소드_1 {
	// 사용자가 원하는 갯수만큼 난수 발생(1~100)
	// 사용자 => 갯수(매개변수)
	// 리턴형 => 배열
	// 예약 가능한 날 / 예약 가능한 시간
	static int[] rand(int count)
	{
		int[] arr = new int[count];
		for(int i=0;i<arr.length;i++)
		{
			arr[i] = (int)(Math.random()*100)+1;
		}
		
		//결과값 전송
		return arr;
	}
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		System.out.print("난수 갯수 입력 : ");
		int count = scan.nextInt();
		
		// 메소드 호출 메소드명(매개변수값) => 자신의 클래스
		// 다른 클래스에서 호출시에는 클래스명.메소드명(매개변수값)
		int[] arr = 메소드_1.rand(count);
		System.out.println(Arrays.toString(arr));
	}

}
