/*
 * 		연산자
 * 
 * 		38page => 산술연산자
 * 		41page => 증감연산자
 * 		44page => 비교연산자
 * 		45page => 논리연산자
 * 		48page => 조건연산자 (삼항연산자)
 * 		=> 대입연산자
 * 		---------------------------
 * 		자바에서 지원하는 연산자
 * 		---------------------------
 * 		1. 단항연산자
 * 			= 증감연산자 (++, --) => 한개 증가,감소시에 사용 / 주로 반복문에서 사용(for, while, do~while)
 * 				1)전치연산자 : 먼저 증가한 후에 다른 연산자를 수행
 * 					ex) int a = 10;
 * 						int b = ++a;
 * 							1. 증가 => a=11
 * 							2. b에 11을 대입
 * 
 *  				ex) int a = 10;
 * 						int b = --a;
 * 						a = 9, b = 9
 * 
 * 				2)후치연산자 : 다른 연산자를 먼저 수행한 후에 나중에 증가
 * 					ex) int a = 10;
 * 						int b = a++;
 * 							1. b에 증가하지 않은 a값 대입
 * 							2. a값 증가
 * 						char c = 'A';
 * 						system.out.println(c++); => 'A'
 * 							1. 먼저 'A'를 출력한 후에 c가 증가
 * 						
 * 					ex) int a = 10;
 * 						int b = a--;
 * 						a = 10, b = 9;
 * 				=========================> byte, short, int, long, float, double, char 적용됨
 * 
 * 			= 부정연산자 (!) ==> boolean만 사용 가능
 * 				!true => false
 * 				!false => true
 * 
 * 				ex) int a = 10;
 * 					!(a%2==0) ==> false => 논리연산자
 * 					 = a%2!=0
 *
 * 			= 형변환 연산자 (데이터형)
 * 				= 자동 형변환
 * 					=> 작은 데이터가 큰 데이터형으로 들어갈 때 / 연산처리시
 * 						int a = 'A' => 65
 * 						long a = 10 => 10L
 * 						double d = 10 => 10.0
 * 
 * 				= 강제 형변환
 * 					=> 큰 데이터형을 작은 데이터형으로 변경할 때
 * 						int a = (int)10.5;
 * 
 * 				byte < char < int < long < double
 * 		---------------------------
 * 		2. 이항연산자
 * 			= 산술연산자 (+, -, *, /, %)
 * 				+
 * 					1) 산술 처리
 * 						10 + 10 = 20
 * 					2) 문자열 결합
 * 						10 + "10" = 1010
 * 						"10" + 10 = 1010
 * 						7 + "7" + 7 = "777"
 * 				/
 * 				%
 * 			= 비교연산자 (==, !=, <, >, <=, >=) +instanceof
 * 			= 논리연산자 (&&, ||)
 * 			= 대입연산자 (=, +=, -=)
 * 		---------------------------
 * 		3. 삼항연산자
 * 			= (조건)?값1:값2
 * 				조건이 참이면 값1 거짓이면 값2
 * 		---------------------------
 * 		
 */
public class 연산자정리 {

	public static void main(String[] args) {
		
		char c = 'A';
		System.out.println(c++);
		System.out.println(c);
		
	}

}
